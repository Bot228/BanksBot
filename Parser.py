# -*- coding: utf-8 -*-
import requests
from telebot import TeleBot
from bs4 import BeautifulSoup
from telebot.types import Message

class Parse:

    def __init__(self, bot: TeleBot):
        self.ans = ''
        self.bot = bot
        self.flag2 = False
        self.HEADERS = {'user_agent': 'head'}
        self.URL = 'https://mainfin.ru/currency/'

    def create_URL(self, message: Message):
        self.ans = ''
        self.flag2 = False
        self.URL = 'https://mainfin.ru/currency/'
        a = message
        a = str(a)
        a = a.lower()
        if (a != ""):
            if (a.find("–¥–æ–ª–ª–∞—Ä") != -1 or a.find("usd") != -1 or a.find("–¥–æ–ª–∞—Ä") != -1):
                self.URL = self.URL + 'usd/'
                self.ans = "–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –≤ "
            elif (a.find("–µ–≤—Ä–æ") != -1 or a.find("eur") != -1):
                self.URL = self.URL + 'eur/'
                self.ans = "–ö—É—Ä—Å –µ–≤—Ä–æ –≤ "
            elif (a.find("—é–∞–Ω") != -1 or a.find("cny") != -1):
                self.URL = self.URL + 'cny/'
                self.ans = "–ö—É—Ä—Å —é–∞–Ω—è –≤ "
            elif (a.find("—Ñ—É–Ω—Ç") != -1 or a.find("gbp") != -1):
                self.URL = self.URL + 'gbp/'
                self.ans = "–ö—É—Ä—Å —Ñ—É–Ω—Ç–∞ –≤ "
            elif (a.find("–π–µ–Ω") != -1 or a.find("jpy") != -1):
                self.URL = self.URL + 'jpy/'
                self.ans = "–ö—É—Ä—Å –π–µ–Ω—ã –≤ "
            else:
                self.bot.send_message(message.chat.id, "–ù–µ –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å")
                self.flag2 = True
            if (a.find("–ø–µ—Ç–µ—Ä–±—É—Ä–≥") != -1 or a.find("–ø–∏—Ç–µ—Ä") != -1 or a.find("—Å–ø–±") != -1):
                self.URL = self.URL + 'sankt-peterburg'
                self.ans = self.ans + "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ"
            elif (a.find("–º–æ—Å–∫–≤") != -1):
                self.URL = self.URL + 'moskva'
                self.ans = self.ans + "–ú–æ—Å–∫–≤–µ"
            elif (a.find("—Ä–æ—Å—Ç–æ–≤") != -1):
                self.URL = self.URL + 'rostov-na-donu'
                self.ans = self.ans + "–†–æ—Å—Ç–æ–≤–µ-–Ω–∞-–î–æ–Ω—É"
            elif (a.find("–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥") != -1):
                self.URL = self.URL + 'ekaterinburg'
                self.ans = self.ans + "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ"
            elif (a.find("–∫–∞–∑–∞–Ω") != -1):
                self.URL = self.URL + 'kazan'
                self.ans = self.ans + "–ö–∞–∑–∞–Ω–∏"
            elif ((a.find("–Ω–∏–∂–Ω") != -1 and a.find("–Ω–æ–≤–≥–æ—Ä–æ–¥") != -1)):
                self.URL = self.URL + 'nizhniy-novgorod'
                self.ans = self.ans + "–ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ"
            elif (a.find("–Ω–æ–≤–æ—Å–∏–±") != -1):
                self.URL = self.URL + 'novosibirsk'
                self.ans = self.ans + "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ"
            elif (a.find("–æ–º—Å–∫") != -1):
                self.URL = self.URL + 'omsk'
                self.ans = self.ans + "–û–º—Å–∫–µ"
            elif (a.find("—Å–∞–º–∞—Ä") != -1):
                self.URL = self.URL + 'samara'
                self.ans = self.ans + "–°–∞–º–∞—Ä–µ"
            elif (a.find("—á–µ–ª—è–±–∏–Ω—Å–∫") != -1):
                self.URL = self.URL + 'chelyabinsk'
                self.ans = self.ans + "–ß–µ–ª—è–±–∏–Ω—Å–∫–µ"
            elif (a.find("—É—Ñ") != -1):
                self.URL = self.URL + 'ufa'
                self.ans = self.ans + "–£—Ñ–µ"
            elif (a.find("–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫") != -1):
                self.URL = self.URL + 'krasnoyarsk'
                self.ans = self.ans + "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–µ"
            elif (a.find("–ø–µ—Ä–º") != -1):
                self.URL = self.URL + 'perm'
                self.ans = self.ans + "–ü–µ—Ä–º–∏"
            elif (a.find("–≤–æ—Ä–æ–Ω–µ–∂") != -1):
                self.URL = self.URL + 'voronezh'
                self.ans = self.ans + "–í–æ—Ä–æ–Ω–µ–∂–µ"
            elif (a.find("–í–æ–ª–≥–æ–≥—Ä–∞–¥") != -1):
                self.URL = self.URL + 'volgograd'
                self.ans = self.ans + "–í–æ–ª–≥–æ–≥—Ä–∞–¥–µ"
            elif (a.find("–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä") != -1):
                self.URL = self.URL + 'krasnodar'
                self.ans = self.ans + "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ"
            elif (a.find("—Å–∞—Ä–∞—Ç–æ–≤") != -1):
                self.URL = self.URL + 'saratov'
                self.ans = self.ans + "–°–∞—Ä–∞—Ç–æ–≤–µ"
            elif (a.find("—Ç—é–º–µ–Ω") != -1):
                self.URL = self.URL + 'tumen'
                self.ans = self.ans + "–¢—é–º–µ–Ω–∏"
            elif (a.find("—Ç–æ–ª—å—è—Ç") != -1):
                self.URL = self.URL + 'tolyatti'
                self.ans = self.ans + "–¢–æ–ª—å—è—Ç—Ç–∏"
            elif (a.find("–∏–∂–µ–≤—Å–∫") != -1):
                self.URL = self.URL + 'izhevsk'
                self.ans = self.ans + "–ò–∂–µ–≤—Å–∫–µ"
            elif (a.find("–±–∞—Ä–Ω–∞—É–ª") != -1):
                self.URL = self.URL + 'barnaul'
                self.ans = self.ans + "–ë–∞—Ä–Ω–∞—É–ª–µ"
            elif (a.find("–∏—Ä–∫—É—Ç—Å–∫") != -1):
                self.URL = self.URL + 'irkutsk'
                self.ans = self.ans + "–ò—Ä–∫—É—Ç—Å–∫–µ"
            elif (a.find("—É–ª—å—è–Ω–æ–≤—Å–∫") != -1):
                self.URL = self.URL + 'ulyanovsk'
                self.ans = self.ans + "–£–ª—å—è–Ω–æ–≤—Å–∫–µ"
            elif (a.find("—Ö–∞–±–∞—Ä–æ–≤—Å–∫") != -1):
                self.URL = self.URL + 'habarovsk'
                self.ans = self.ans + "–•–∞–±–∞—Ä–æ–≤—Å–∫–µ"
            elif (a.find("—è—Ä–æ—Å–ª–∞–≤–ª") != -1):
                self.URL = self.URL + 'yaroslavl'
                self.ans = self.ans + "–Ø—Ä–æ—Å–ª–∞–≤–ª–µ"
            elif (a.find("–≤–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫") != -1):
                self.URL = self.URL + 'vladivostok'
                self.ans = self.ans + "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–µ"
            elif (a.find("–º–∞—Ö–∞—á–∫–∞–ª") != -1):
                self.URL = self.URL + 'mahachkala'
                self.ans = self.ans + "–ú–∞—Ö–∞—á–∫–∞–ª–µ"
            elif (a.find("—Ç–æ–º—Å–∫") != -1):
                self.URL = self.URL + 'tomsk'
                self.ans = self.ans + "–¢–æ–º—Å–∫–µ"
            elif (a.find("–æ—Ä–µ–Ω–±—É—Ä–≥") != -1):
                self.URL = self.URL + 'orenburg'
                self.ans = self.ans + "–û—Ä–µ–Ω–±—É—Ä–≥–µ"
            elif (a.find("–∫–µ–º–µ—Ä–æ–≤–æ") != -1):
                self.URL = self.URL + 'kemerovo'
                self.ans = self.ans + "–ö–µ–º–µ—Ä–æ–≤–æ"
            elif (a.find("–Ω–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫") != -1):
                self.URL = self.URL + 'novokuzneck'
                self.ans = self.ans + "–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫–µ"
            else:
                self.ans = self.ans + "–†–æ—Å—Å–∏–∏"
            return self.URL

    def web_parse(self, message: Message):
        URL = Parse.create_URL(self, message)
        if (self.flag2 == False):
            try:
                response = requests.get(URL, headers=self.HEADERS)
                response.encoding = 'utf8'
                soup = BeautifulSoup(response.text, 'html.parser')
                file = open(str(message.from_user.id) + '.txt', "w", encoding="utf-8")
                file.write("üåç" + self.ans + '\n' + '\n')
                for i in range(5):
                    for tag in soup.find_all('a', {"class": "currpos-{0}".format(i)}):
                        file.write("üèõ" + "{0}".format(tag.text) + '\n')
                    d = soup.find('tr', {"data-key": "{0}".format(i)})
                    flag = True
                    for tag in d.findAllNext('span', {"class": "float-convert__btn"}, limit=2):
                        if (flag):
                            file.write("–ü–æ–∫—É–ø–∫–∞ - {0} —Ä—É–±.".format(tag.text) + '\n')
                            flag = False
                        else:
                            file.write("–ü—Ä–æ–¥–∞–∂–∞ - {0} —Ä—É–±.".format(tag.text) + '\n' + '\n')
                file.close()
                file = open(str(message.from_user.id) + '.txt', "r", encoding="utf-8")
                self.bot.send_message(message.from_user.id, file.read())
                file.close()
            except:
                file = open(str(message.from_user.id) + '.txt', "r", encoding="utf-8")
                self.bot.send_message(message.from_user.id, file.read())
                file.close()
                return False
